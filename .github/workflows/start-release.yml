name: Start release

on:
  issues:
    types: [opened]

permissions:
  actions: write
  issues: write

concurrency:
  group: issue-${{ github.event.issue.number }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Install Java 21 for JBang, the default JDK will be overridden later by the one we want to build with
      - name: Set up Java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Provide visual feedback
        uses: quarkusio/conversational-release-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          action: looking
      - name: Configure Git author
        run: |
          git config --global user.email "quarkusio+quarkusbot@gmail.com"
          git config --global user.name "quarkusbot"
          git config --global url."https://api:${{ secrets.RELEASE_GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git config --global url."https://ssh:${{ secrets.RELEASE_GITHUB_TOKEN }}@github.com/".insteadOf "ssh://git@github.com/"
          git config --global url."https://git:${{ secrets.RELEASE_GITHUB_TOKEN }}@github.com/".insteadOf "git@github.com:"
      - name: Install additional packages
        run: |
          sudo apt-get -y install lz4 xmlstarlet
      - name: Check out quarkusio/main-release-scripts
        uses: actions/checkout@v4
        with:
          repository: quarkusio/main-release-scripts
      - name: Get release information
        id: get-release-information
        uses: quarkusio/conversational-release-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          action: get-release-information
      - name: Set up Java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ steps.get-release-information.outputs.jdk }}
      - name: Push Maven server settings
        run: |
          sed -i "s@</servers>@</servers><profiles><profile><id>google-mirror</id><repositories><repository><id>google-maven-central</id><name>GCS Maven Central mirror EU</name><url>https://maven-central.storage-download.googleapis.com/maven2/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository></repositories><pluginRepositories><pluginRepository><id>google-maven-central</id><name>GCS Maven Central mirror EU</name><url>https://maven-central.storage-download.googleapis.com/maven2/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories></profile></profiles><activeProfiles><activeProfile>google-mirror</activeProfile></activeProfiles>@" ~/.m2/settings.xml
      - name: Push Gradle publication settings
        run: |
          mkdir ~/.gradle
          echo "gradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}" > ~/.gradle/gradle.properties
          echo "gradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}" >> ~/.gradle/gradle.properties
      - name: Start release
        id: release
        uses: quarkusio/conversational-release-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          MAVEN_OPTS: -Xmx3g
          MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PRIVATE_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          RELEASE_GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.JRELEASER_GITHUB_TOKEN }}
          JRELEASER_CHOCOLATEY_GITHUB_TOKEN: ${{ secrets.JRELEASER_CHOCOLATEY_GITHUB_TOKEN }}
          JRELEASER_CHOCOLATEY_GITHUB_USERNAME: ${{ secrets.JRELEASER_CHOCOLATEY_GITHUB_USERNAME }}
          JRELEASER_HOMEBREW_GITHUB_TOKEN: ${{ secrets.JRELEASER_HOMEBREW_GITHUB_TOKEN }}
          JRELEASER_HOMEBREW_GITHUB_USERNAME: ${{ secrets.JRELEASER_HOMEBREW_GITHUB_USERNAME }}
          JRELEASER_SDKMAN_CONSUMER_KEY: ${{ secrets.JRELEASER_SDKMAN_CONSUMER_KEY }}
          JRELEASER_SDKMAN_CONSUMER_TOKEN: ${{ secrets.JRELEASER_SDKMAN_CONSUMER_TOKEN }}
      - name: Create archive for work directory
        if: always()
        run: tar -I lz4 -cf work.tar.lz4 work
      - name: Upload work directory archive as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: work
          path: work.tar.lz4
          retention-days: 20
      - name: Clean up Maven cache
        if: always()
        run: |
          [ -d ~/.m2/repository/io/quarkus ] && [ -n "${{ steps.release.outputs.version }}" ] && find ~/.m2/repository/io/quarkus -name ${{ steps.release.outputs.version }} -type d -exec rm -rf {} +
          [ -d ~/.m2/repository/io/quarkus ] && find ~/.m2/repository/io/quarkus -name 999-SNAPSHOT -type d -exec rm -rf {} +
      - name: Post interaction comment
        uses: quarkusio/conversational-release-action@main
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          action: post-interaction-comment
          interaction-comment: ${{ steps.release.outputs.interaction-comment }}
